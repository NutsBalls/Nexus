basePath: /
definitions:
  controllers.AuthResponse:
    properties:
      token:
        type: string
      user:
        properties:
          email:
            type: string
          id:
            type: integer
          username:
            type: string
        type: object
    type: object
  controllers.CreateDocumentRequest:
    properties:
      content:
        example: Содержимое документа
        type: string
      folder_id:
        example: 1
        type: integer
      is_public:
        example: false
        type: boolean
      title:
        example: Мой документ
        type: string
    type: object
  controllers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  controllers.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  controllers.ShareRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  models.Attachment:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      document_id:
        type: integer
      filename:
        type: string
      id:
        type: integer
      path:
        type: string
      size:
        type: integer
      updated_at:
        type: string
    type: object
  models.Document:
    properties:
      content:
        example: Содержимое документа
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      folder_id:
        example: 2
        type: integer
      id:
        type: integer
      is_public:
        example: false
        type: boolean
      shared_users:
        items:
          $ref: '#/definitions/models.User'
        type: array
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      title:
        example: Мой документ
        type: string
      updated_at:
        type: string
      user_id:
        example: 1
        type: integer
      versions:
        items:
          $ref: '#/definitions/models.Version'
        type: array
    type: object
  models.Folder:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    required:
    - name
    type: object
  models.Tag:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      documents:
        items:
          $ref: '#/definitions/models.Document'
        type: array
      id:
        type: integer
      name:
        example: Important
        type: string
      updated_at:
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      documents:
        items:
          $ref: '#/definitions/models.Document'
        type: array
      email:
        example: john@example.com
        type: string
      folders:
        items:
          $ref: '#/definitions/models.Folder'
        type: array
      id:
        type: integer
      updated_at:
        type: string
      username:
        example: johndoe
        type: string
    type: object
  models.Version:
    properties:
      change_log:
        type: string
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      document_id:
        type: integer
      id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Описание вашего API.
  title: Nexus
  version: "1.0"
paths:
  /api/documents:
    get:
      description: Возвращает список всех документов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      - BearerAuth: []
      summary: Получить список всех документов
      tags:
      - documents
    post:
      consumes:
      - application/json
      description: Создает новый документ с переданными данными
      parameters:
      - description: Данные документа
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateDocumentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать новый документ
      tags:
      - documents
  /api/documents/{id}:
    delete:
      description: Удаляет документ по указанному идентификатору
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удалить документ
      tags:
      - documents
    get:
      description: Возвращает документ по указанному идентификатору
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить документ по ID
      tags:
      - documents
    put:
      consumes:
      - application/json
      description: Обновляет существующий документ
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      - description: Обновленные данные документа
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Обновить документ
      tags:
      - documents
  /api/documents/{id}/attachments:
    get:
      description: Возвращает список вложений для указанного документа
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Attachment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить вложения документа
      tags:
      - document attachments
    post:
      consumes:
      - multipart/form-data
      description: Загружает вложение для указанного документа
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      - description: Файл вложения
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Attachment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Загрузить вложение
      tags:
      - document attachments
  /api/documents/{id}/share:
    post:
      consumes:
      - application/json
      description: Предоставляет доступ к документу другому пользователю по email
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      - description: Данные для общего доступа (email пользователя)
        in: body
        name: share
        required: true
        schema:
          $ref: '#/definitions/controllers.ShareRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Предоставить доступ к документу
      tags:
      - document sharing
  /api/documents/{id}/versions:
    get:
      description: Возвращает список версий для указанного документа
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Version'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить версии документа
      tags:
      - document versions
    post:
      consumes:
      - application/json
      description: Создает новую версию для указанного документа
      parameters:
      - description: ID документа
        in: path
        name: id
        required: true
        type: string
      - description: Данные версии
        in: body
        name: version
        required: true
        schema:
          $ref: '#/definitions/models.Version'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Version'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать новую версию документа
      tags:
      - document versions
  /api/documents/search:
    get:
      description: Поиск документов по запросу с учетом прав доступа
      parameters:
      - description: Поисковый запрос
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Поиск документов
      tags:
      - documents
  /api/folders:
    post:
      consumes:
      - application/json
      description: Создает новую папку для текущего пользователя.
      parameters:
      - description: Данные для создания папки
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/models.Folder'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Folder'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to create folder
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Создать папку
      tags:
      - Folders
  /api/login:
    post:
      consumes:
      - application/json
      description: Аутентификация пользователя
      parameters:
      - description: Учетные данные
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход пользователя
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Создание нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация пользователя
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
