basePath: /
definitions:
  models.Document:
    properties:
      content:
        type: string
      createdAt:
        type: string
      folderID:
        type: integer
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.User:
    properties:
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      email:
        example: test@example.com
        type: string
      id:
        example: 1
        type: integer
      is_admin:
        example: false
        type: boolean
      password_hash:
        example: $2a$10$...
        type: string
      username:
        example: testuser
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Описание вашего API.
  title: Nexus
  version: "1.0"
paths:
  /api/documents:
    get:
      description: Возвращает все документы из базы данных
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Document'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получает список документов
      tags:
      - documents
    post:
      consumes:
      - application/json
      description: Добавляет новый документ в базу данных
      parameters:
      - description: Document data
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создает новый документ
      tags:
      - documents
  /api/documents/{id}:
    delete:
      description: Удаляет документ по ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Document deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удаляет документ
      tags:
      - documents
    put:
      consumes:
      - application/json
      description: Изменяет данные указанного документа по ID
      parameters:
      - description: Document ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated document data
        in: body
        name: document
        required: true
        schema:
          $ref: '#/definitions/models.Document'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Document'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Обновляет документ
      tags:
      - documents
  /api/login:
    post:
      consumes:
      - application/json
      description: Логин пользователя и получение JWT токена для аутентификации
      parameters:
      - description: User credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Аутентифицирует пользователя и возвращает JWT
      tags:
      - users
  /api/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя в системе
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создает нового пользователя
      tags:
      - users
swagger: "2.0"
